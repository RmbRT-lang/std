(/rl/)

INCLUDE 'std/memory'
INCLUDE 'std/math/safe'

::std::io::scan
{
	[T:TYPE] dec(s: [CHAR#]Buffer #&, v: T! &) BOOL
	{
		v := 0;
		FOR(i ::= 0; i < s.Size; i++)
		{
			c ::= s[i];
			IF(c < '0' || c > '9')
				= i != 0;

			v := math::safe::mul(<T>(10), v) + <T>(c-'0');
		}

		= TRUE;
	}

	[T:TYPE] hex(s: [CHAR#]Buffer, v: T! &) BOOL
	{
		v := 0;

		sign ::= str::starts_with(s, "-");
		IF(sign) s := s.drop_start(1);

		b ::= str::starts_with(s, "0x") || str::starts_with(s, "0X");
		IF(b)
			s := s.drop_start(2);

		FOR(i ::= 0; i < s.Size; i++)
		{
			d: T;
			c ::= s[i];
			IF(c >= '0' && c <= '9')
				d := c - '0';
			ELSE IF(c >= 'a' && c <= 'f')
				d := c - ('a' - 0xa);
			ELSE IF(c >= 'A' && c <= 'F')
				d := c - ('A' - 0xA);
			ELSE
			{
				IF(sign)
					v := math::safe::neg(v);
				= b || i != 0;
			}

			v := math::safe::mul(<T>(16), v) + <T>(d);
		}

		IF(sign)
			v := math::safe::neg(v);

		= TRUE;
	}
}