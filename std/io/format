(/rl/)

INCLUDE 'std/io/stream'
INCLUDE 'std/buffer'

::std::io::format
{
	[T:TYPE] hex(o: OStream &, n: T! #&) INLINE VOID := hex_prefixed(o, n, TRUE);
	[T:TYPE] hex_prefixed(o: OStream &, n: T! #&, prefix: BOOL) VOID
	{
		v: UM := n;

		neg: BOOL;
		IF(n < <T>(0))
		{
			neg := TRUE;
			IF(~n) // If -max, ignore value.
				v := -n;
		}

		buffer: CHAR[32] (NOINIT);
		buf: CHAR-Buffer(buffer, ##buffer);

		len ::= 0;
		IF(neg)
			buf[len++] := '-';

		IF(prefix) {
			buf[len++] := '0';
			buf[len++] := 'x';
		}
		FOR(bit ::= 2*SIZEOF(T); bit--;)
			buf[len++] := "0123456789abcdef"[(v>>(bit<<2)) & 0xf];
		o.write(buf.cut(len)++);
	}

	[T:TYPE] dec(o: OStream &, n: T! #&) VOID
	{
		v: UM := n;
		neg: BOOL;
		IF(n < <T>(0))
		{
			neg := TRUE;
			IF(~n)
				v := -n;
		}

		buffer: CHAR[32] (NOINIT);
		buf: CHAR-Buffer(buffer, ##buffer);
		i ::= buf.Size-1;
		DO()
		{
			d ::= v % 10;
			v := v / 10;

			buf[i] := '0'+d;
		} FOR(v; i--)

		IF(neg)
			buf[--i] := '-';

		o.write(buf.drop_start(i)++);
	}
}