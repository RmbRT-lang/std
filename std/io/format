(/rl/)

INCLUDE 'std/io/stream'
INCLUDE 'std/math/unsigned'

::std::io::format
{
	[T:TYPE] hex(o: OStream &, n: T! #&) INLINE VOID := hex(o, n, TRUE);
	[T:TYPE] hex(o: OStream &, n: T! #&, prefix: BOOL) VOID
	{
		v ::= math::unsigned(n);

		IF(n < <T>(0))
		{
			o.write('-');
			IF(~n) // If -max, ignore value.
				v := -n;
		}

		IF(prefix)
			o.write("0x");
		FOR(i ::= 2*SIZEOF(T); i--;)
			o.write("0123456789abcdef"[(n>>(i<<2)) & 0xf]);
	}

	[T:TYPE] dec(o: OStream &, n: T! #&) VOID
	{
		v ::= math::unsigned(n);
		IF(n < <T>(0))
		{
			o.write('-');
			IF(~n)
				v := -n;
		}

		buffer: CHAR[32];
		buf ::= [CHAR]Buffer(buffer, SIZEOF(#buffer));
		i ::= buf.Size-1;
		DO()
		{
			IF(i < 0)
				THROW;

			d ::= v % 10;
			v := v / 10;

			buf[i] := '0'+d;
		} FOR(v; i--)

		o.write(buf.drop_start(i));
	}
}