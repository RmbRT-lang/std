(/rl/)

INCLUDE 'std/nodestruct'

::std [T: TYPE] Opt
{
PRIVATE:
	Exists: BOOL;
	Obj: T-NoDestruct;
PUBLIC:

	{} (NULL);
	{NULL}: Obj(NOINIT);

	[Args...:TYPE]
	:a{args: Args!&&...}: Exists(TRUE), Obj(<Args!&&>(args)...);

	DESTRUCTOR { IF(Exists) Obj->~; }
	
	
	{#&rhs}: Exists(rhs.Exists), Obj(NOINIT)
	{
		IF(Exists)
			Obj->{*rhs};
	}
	
	{&&rhs}: Exists(rhs.Exists), Obj(NOINIT)
	{
		IF(Exists)
			Obj->{&&*rhs};
	}

	# <BOOL> INLINE := Exists;

	#? THIS! INLINE T! #?& := *THIS;
	#? *THIS INLINE T! #?&
	{
		ASSERT(Exists);
		= *Obj;
	}
}