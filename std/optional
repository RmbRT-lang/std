(/rl/)

::std [T: TYPE] Opt
{
	PRIVATE Exists: BOOL;
	PRIVATE Obj: T;

	{} (NULL);
	{NULL}: Obj(NOINIT);

	[Args...:TYPE]
	:some{args: Args!&&...}: Exists(TRUE), Obj(<Args!&&>(args)...);

	DESTRUCTOR { IF(Exists) Obj.~; }
	
	
	{#&rhs}: Exists(rhs.Exists), Obj(NOINIT)
	{
		IF(Exists)
			Obj.{rhs.Obj};
	}
	
	{&&rhs}: Exists(rhs.Exists), Obj(NOINIT)
	{
		IF(Exists)
			Obj.{&&rhs.Obj};
	}

	# <BOOL> INLINE := Exists;

	#? THIS! INLINE T! #?&
	{
		ASSERT(Exists);
		= Obj;
	}
	#? *THIS INLINE T! #?& := THIS!;
}