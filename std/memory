(/rl/)

INCLUDE 'std/types'
INCLUDE 'std/range'
INCLUDE 'std/index'
INCLUDE 'std/help'
INCLUDE 'std/tags'
INCLUDE 'std/math/limit'
INCLUDE 'std/iterator'
INCLUDE 'std/buffer'

::std
{
	::mem [T: TYPE] cmp(
		lhs: T! #\,
		rhs: T! #\,
		elements: UM) SM
	{
		FOR(i ::= 0; i<elements; i++)
			IF(lhs[i] != rhs[i])
				= lhs[i] - rhs[i];
		= 0;
	}

	::mem [T: TYPE] cmp(
		lhs: [T!]Buffer #&,
		rhs: [T!]Buffer #&) SM
	{
		minSz ::= math::min(lhs.Size, rhs.Size);
		IF(sign ::= mem::cmp(lhs.Data, rhs.Data, minSz))
			= sign;
		ELSE
			= lhs.Size - rhs.Size;
	}

	::mem cpy(dst: VOID \, src: VOID #\, size: UM) INLINE VOID
	{
		d ::= <U1 \>(dst);
		s ::= <U1 #\>(src);
		WHILE(size--)
			*d++ := *s++;
	}
}