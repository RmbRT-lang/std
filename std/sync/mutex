(/rl/)

INCLUDE 'std/tags'
INCLUDE 'std/math/limit'

::std::sync Mutex
{
	PRIVATE Locked: BOOL.;
	std::NoCopy;
	std::NoMove;

	{}: Locked(FALSE);

	Handle
	{
		PRIVATE M: BOOL. *;
		DESTRUCTOR
		{
			IF(M)
			{
				*M := :>(FALSE);
				M := NULL;
			}
		}

		{}: M(NULL);
		{m: BOOL. \}: M(m);
		{v: Handle&&}: M(v.M) { v.{}; }
	}

	lock(:ok) VOID
	{
		FOR(i ::= 0; Locked(:<>(TRUE)); i++)
			...0.0005 * std::math::min(i+1, 25);
	}
	lock() INLINE Handle
	{
		lock(:ok);
		= &Locked;
	}

	try_lock(:ok) INLINE BOOL := !Locked(:<>(TRUE));
	unlock(:ok) INLINE VOID { Locked := :>(FALSE); }
}